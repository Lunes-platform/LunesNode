import Dependencies._

inThisBuild(Seq(
  scalaVersion := "2.12.4",
  organization := "io.lunes" //,
  //crossPaths := false
))

name := "LunesNode"
mainClass in Compile := Some("io.lunes.LunesNode")

scalacOptions ++= Seq(
  "-feature",
  "-deprecation",
  "-language:higherKinds",
  "-language:implicitConversions",
  "-Ywarn-unused:-implicits",
  "-Xlint")

libraryDependencies ++=
  Dependencies.network ++
  Dependencies.db ++
  Dependencies.http ++
  Dependencies.akka ++
  Dependencies.serialization ++
  Dependencies.testKit.map(_ % "test") ++
  Dependencies.logging ++
  Dependencies.matcher ++
  Dependencies.metrics ++
  Dependencies.fp ++
  Dependencies.monix.value ++
  Dependencies.scodec.value ++
  Dependencies.fastparse.value ++
  Seq(
    "com.iheart" %% "ficus" % "1.4.2",
    ("org.scorexfoundation" %% "scrypto" % "1.2.2").exclude("org.slf4j", "slf4j-api"),
    "commons-net" % "commons-net" % "3.+"
  )



fork in run := true

//assembly settings
assemblyJarName in assembly := s"LunesNode-all-${version.value}.jar"
assemblyMergeStrategy in assembly := {
  case PathList("META-INF", "io.netty.versions.properties") => MergeStrategy.concat
  case other => (assemblyMergeStrategy in assembly).value(other)
}
test in assembly := {}


javaOptions in Universal ++= Seq(
  // -J prefix is required by the bash script
  "-J-server",
  // JVM memory tuning for 2g ram
  "-J-Xms128m",
  "-J-Xmx2g",
  "-J-XX:+ExitOnOutOfMemoryError",
  // Java 9 support
  "-J-XX:+IgnoreUnrecognizedVMOptions",
  "-J--add-modules=java.xml.bind",

  // from https://groups.google.com/d/msg/akka-user/9s4Yl7aEz3E/zfxmdc0cGQAJ
  "-J-XX:+UseG1GC",
  "-J-XX:+UseNUMA",
  "-J-XX:+AlwaysPreTouch",

  // probably can't use these with jstack and others tools
  "-J-XX:+PerfDisableSharedMem",
  "-J-XX:+ParallelRefProcEnabled",
  "-J-XX:+UseStringDeduplication")

